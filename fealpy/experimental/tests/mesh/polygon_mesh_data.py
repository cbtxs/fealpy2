import numpy as np

init_data = [
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([0, 3, 4, 4, 1, 0, 1, 4, 5, 2, 3, 6, 7, 4, 4, 7, 8,
                        5],dtype=np.int64),np.array([0,3,6,10,14,18],dtype=np.int64)),
     "edge": np.array([[1,0], [0,3], [4,0], [2,1], [4,1], [5,2], [3,4], [3,6],
                       [4,5], [7,4], [8,5], [6,7], [7,8]],dtype=np.int64),
     "cellLocation": np.array([0,3,6,10,14,18],dtype = np.int64),
     "NN": 9,
     "NE": 13,
     "NF": 13,
     "NC": 5,
     "face2cell": np.array([[1,1,1,1], [0,0,0,0], [0,1,2,2], [2,2,3,3], [1,2,0,0], 
                            [2,2,2,2], [0,3,1,3], [3,3,0,0], [2,4,1,3], [3,4,2,0],
                            [4,4,2,2], [3,3,1,1], [4,4,1,1]],dtype = np.int64)
    },
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([[0,3,4,1],[3,6,7,4],[1,4,5,2],
                        [4,7,8,5]],dtype=np.int64),None),
     "edge": np.array([[1,0],[0,3],[2,1],[4,1],[5,2],[3,4],[3,6],[4,5],[7,4],
                       [8,5],[6,7],[7,8]],dtype=np.int64),
     "NN": 9,   
     "NE": 12,
     "NF": 12,
     "NC": 4,
     "face2cell":np.array([[0,0,3,3],[0,0,0,0],[2,2,3,3],[0,2,2,0],[2,2,2,2],[0,1,1,3],
                           [1,1,0,0],[2,3,1,3],[1,3,2,0],[3,3,2,2],[1,1,1,1],[3,3,1,1]],dtype = np.int64)
        }
    ]

entity_data = [
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([0, 3, 4, 4, 1, 0, 1, 4, 5, 2, 3, 6, 7, 4, 4, 7, 8,
                        5],dtype=np.int64),np.array([0,3,6,10,14,18],dtype=np.int64)),
     "q": 2,
     "entity_measure":(np.array([0.0],dtype=np.float64),
                       np.array([1.0,1.0,1.41421356,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0],dtype
                                                                 = np.float64),
                       np.array([0.5,0.5,1.,1.,1.],dtype=np.float64)),
     "edge_barycenter": np.array([[0.0,0.5],[0.5,0.0],[0.5,0.5],[0.0,1.5],[0.5,1.0],
                                  [0.5,2.0],[1.0,0.5],[1.5,0.0],[1.0,1.5],[1.5,1.0],
                                  [1.5,2.0],[2.0,0.5],[2.0,1.5]],dtype=np.float64),
     "cell_barycenter":np.array([[0.66666667,0.33333333],[0.33333333,0.66666667],
                                 [0.5       ,1.5       ],[1.5       ,0.5       ],
                                 [1.5       ,1.5       ]],dtype=np.float64),
     "boundary_node_index": np.array([0,1,2,3,5,6,7,8],dtype=np.int64),
     "boundary_face_index": np.array([0,1,3,5,7,10,11,12],dtype=np.int64),
     "boundary_cell_index": np.array([0,1,2,3,4],dtype=np.int64),
     "bcs": np.array([[0.66666667,0.16666667,0.16666667],[0.16666667,0.66666667,0.16666667],
                      [0.16666667,0.16666667,0.66666667]],dtype=np.float64),
     "weight": np.array([0.33333333,0.33333333,0.33333333],dtype=np.float64),
     "edge_bcs": np.array([[1.,0.],[0.,1.]],dtype=np.float64),
     "edge_weight": np.array([0.5,0.5],dtype=np.float64)
    },
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([[0,3,4,1],[3,6,7,4],[1,4,5,2],
                        [4,7,8,5]],dtype=np.int64),None),
     "q": 2,   
     "entity_measure":(np.array([0.0],dtype=np.float64),
                       np.array([1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.],dtype
                                = np.float64),
                       np.array([1.,1.,1.,1.],dtype=np.float64)),
     "edge_barycenter":np.array([[0.0,0.5],[0.5,0.0],[0.0,1.5],[0.5,1.0],[0.5,2.0],
                                 [1.0,0.5],[1.5,0.0],[1.0,1.5],[1.5,1.0],[1.5,2.0],
                                 [2.0,0.5],[2.0,1.5]],dtype=np.float64),
     "cell_barycenter":np.array([[0.5,0.5],[1.5,0.5],[0.5,1.5],[1.5,1.5]],dtype=np.float64),
     "boundary_node_index": np.array([0,1,2,3,5,6,7,8],dtype=np.int64),
     "boundary_face_index": np.array([0,1,2,4,6,9,10,11],dtype=np.int64),
     "boundary_cell_index": np.array([0,1,2,3],dtype=np.int64),
     "bcs":
         np.array([[0.66666667,0.16666667,0.16666667],[0.16666667,0.66666667,0.16666667],
                      [0.16666667,0.16666667,0.66666667]],dtype=np.float64),
     "weight": np.array([0.33333333,0.33333333,0.33333333],dtype=np.float64),
     "edge_bcs": np.array([[1.,0.],[0.,1.]],dtype=np.float64),
     "edge_weight": np.array([0.5,0.5],dtype=np.float64)

        }
    ] 

extend_data = [
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([0, 3, 4, 4, 1, 0, 1, 4, 5, 2, 3, 6, 7, 4, 4, 7, 8,
                        5],dtype=np.int64),np.array([0,3,6,10,14,18],dtype=np.int64)),
     "p1": 2,
     "p2": 3,
     "ipoints":np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                         [2.0,0.0],[2.0,1.0],[2.0,2.0],[0.0,0.5],[0.5,0.0],[0.5,0.5],
                         [0.0,1.5],[0.5,1.0],[0.5,2.0],[1.0,0.5],[1.5,0.0],[1.0,1.5],
                         [1.5,1.0],[1.5,2.0],[2.0,0.5],[2.0,1.5],[0.66666667,0.33333333],
                         [0.33333333,0.66666667],[0.5,1.5],[1.5,0.5],[1.5,1.5]],dtype=np.float64),
     "ipoints2": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],
                          [1.0,2.0],[2.0,0.0],[2.0,1.0],[2.0,2.0],[0.0,0.7236068],
                          [0.0,0.2763932],[0.2763932,0.0],[0.7236068,0.0],
                          [0.7236068,0.7236068],[0.2763932,0.2763932],
                          [0.0,1.7236068],[0.0,1.2763932],[0.7236068,1.0],
                          [0.2763932,1.0],[0.7236068,2.0],[0.2763932,2.0],
                          [1.0,0.2763932],[1.0,0.7236068],[1.2763932,0.0],
                          [1.7236068,0.0],[1.0,1.2763932],[1.0,1.7236068],
                          [1.7236068,1.0],[1.2763932,1.0],[1.7236068,2.0],
                          [1.2763932,2.0],[2.0,0.2763932],[2.0,0.7236068],
                          [2.0,1.2763932],[2.0,1.7236068],[0.56060065,0.27209609],
                          [0.77273268,0.27209609],[0.66666667,0.45580782],
                          [0.22726732,0.60542942],[0.43939935,0.60542942],
                          [0.33333333,0.78914115],[0.35,1.41339746],[0.65,1.41339746],
                          [0.5,1.67320508],[1.35,0.41339746],[1.65,0.41339746],
                          [1.5,0.67320508],[1.35,1.41339746],[1.65,1.41339746],
                          [1.5,1.67320508]],dtype=np.float64),
     "a1": 10.666666666666641,
     "a2": np.array([0.33333333,0.33333333,2.66666667,2.66666667,4.66666667],dtype=np.float64),
     "cell2ipoint": (np.array([0,10,3,15,4,11,22],dtype=np.int64), 
                     np.array([4,13,1,9,0,11,23],dtype=np.int64), 
                     np.array([1,13,4,17,5,14,2,12,24],dtype=np.int64), 
                     np.array([3,16,6,20,7,18,4,15,25],dtype=np.int64), 
                     np.array([4,18,7,21,8,19,5,17,26],dtype=np.int64))
     },
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([[0,3,4,1],[3,6,7,4],[1,4,5,2],
                        [4,7,8,5]],dtype=np.int64),None),
     "p1": 2,
     "p2": 3,
     "ipoints": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                          [2.0,0.0],[2.0,1.0],[2.0,2.0],[0.0,0.5],[0.5,0.0],[0.0,1.5],
                          [0.5,1.0],[0.5,2.0],[1.0,0.5],[1.5,0.0],[1.0,1.5],[1.5,1.0],
                          [1.5,2.0],[2.0,0.5],[2.0,1.5],[0.5,0.5],[1.5,0.5],[0.5,1.5],
                          [1.5,1.5]],dtype=np.float64),
     "ipoints2": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                           [2.0,0.0],[2.0,1.0],[2.0,2.0],[0.0,0.7236068],[0.0,0.2763932],
                           [0.2763932,0.0],[0.7236068,0.0],[0.0,1.7236068],[0.0,1.2763932],
                           [0.7236068,1.0],[0.2763932,1.0],[0.7236068,2.0],[0.2763932,2.0],
                           [1.0,0.2763932],[1.0,0.7236068],[1.2763932,0.0],[1.7236068,0.0],
                           [1.0,1.2763932],[1.0,1.7236068],[1.7236068,1.0],[1.2763932,1.0],
                           [1.7236068,2.0],[1.2763932,2.0],[2.0,0.2763932],[2.0,0.7236068],
                           [2.0,1.2763932],[2.0,1.7236068],[0.35,0.41339746],[0.65,0.41339746],
                           [0.5,0.67320508],[1.35,0.41339746],[1.65,0.41339746],[1.5,0.67320508],
                           [0.35,1.41339746],[0.65,1.41339746],[0.5,1.67320508],[1.35,1.41339746],
                           [1.65,1.41339746],[1.5,1.67320508]],dtype=np.float64),
     "a1": 10.666666666666641,
     "a2": np.array([0.66666667,2.66666667,2.66666667,4.66666667],dtype=np.float64),
     "cell2ipoint": (np.array([0,10,3,14,4,12,1,9,21],dtype=np.int64), 
                     np.array([3,15,6,19,7,17,4,14,22],dtype=np.int64), 
                     np.array([1,12,4,16,5,13,2,11,23],dtype=np.int64), 
                     np.array([4,17,7,20,8,18,5,16,24],dtype=np.int64))
        }
]

geo_data = [    
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([0, 3, 4, 4, 1, 0, 1, 4, 5, 2, 3, 6, 7, 4, 4, 7, 8,
                        5],dtype=np.int64),np.array([0,3,6,10,14,18],dtype=np.int64)),
     "edge_normal": np.array([[-1.0,0.0],[0.0,-1.0],[-1.0,1.0],[-1.0,0.0],[0.0,1.0],
                              [0.0,1.0],[1.0,0.0],[0.0,-1.0],[1.0,0.0],[0.0,1.0],
                              [0.0,1.0],[1.0,0.0],[1.0,0.0]],dtype=np.float64),
     "edge_unit_normal": np.array([[-1.0,0.0],[0.0,-1.0],[-0.70710678,0.70710678],
                                   [-1.0,0.0],[0.0,1.0],[0.0,1.0],[1.0,0.0],
                                   [0.0,-1.0],[1.0,0.0],[0.0,1.0],[0.0,1.0],
                                   [1.0,0.0],[1.0,0.0]],dtype=np.float64)
     },
    {"node": np.array([[0.0,0.0],[0.0,1.0],[0.0,2.0],[1.0,0.0],[1.0,1.0],[1.0,2.0],
                     [ 2.0,0.0],[2.0,1.0],[2.0,2.0]],dtype=np.float64),
     "cell": (np.array([[0,3,4,1],[3,6,7,4],[1,4,5,2],
                        [4,7,8,5]],dtype=np.int64),None),
     "edge_normal": np.array([[-1.0,0.0],[0.0,-1.0],[-1.0,0.0],[0.0,1.0],[0.0,1.0],
                              [1.0,0.0],[0.0,-1.0],[1.0,0.0],[0.0,1.0],[0.0,1.0],
                              [1.0,0.0],[1.0,0.0]],dtype=np.float64),
     "edge_unit_normal": np.array([[-1.0,0.0],[0.0,-1.0],[-1.0,0.0],[0.0,1.0],[0.0,1.0],
                              [1.0,0.0],[0.0,-1.0],[1.0,0.0],[0.0,1.0],[0.0,1.0],
                              [1.0,0.0],[1.0,0.0]],dtype=np.float64)
     }
        ]
mesh_example_data = [
        {"one_triangle_edge": np.array([[0,1],[2,0],[1,2]],dtype=np.int64),
         "one_triangle_edge2cell":np.array([[0,0,0,0],[0,0,2,2],[0,0,1,1]],dtype=np.int64),
         "one_square_edge": np.array([[0,1],[3,0],[1,2],[2,3]],dtype=np.int64),
         "one_square_edge2cell":np.array([[0,0,0,0],[0,0,3,3],[0,0,1,1],[0,0,2,2]],dtype=np.int64),
         "one_pentagon_edge": np.array([[0,1],[4,0],[1,2],[2,3],[3,4]],dtype=np.int64),
         "one_pentagon_edge2cell":np.array([[0,0,0,0],[0,0,4,4],[0,0,1,1],[0,0,2,2],[0,0,3,3]],dtype=np.int64),
         "one_hexagon_edge": np.array([[0,1],[5,0],[1,2],[2,3],[3,4],[4,5]],dtype=np.int64),
         "one_hexagon_edge2cell":np.array([[0,0,0,0],[0,0,5,5],[0,0,1,1],[0,0,2,2],[0,0,3,3],[0,0,4,4]],dtype=np.int64),
         "triangle_node": np.array([[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]],dtype=np.float64),
         "triangle_cell": np.array([[1,2,0],[3,0,2]],dtype=np.int64),
         "pmesh_edge": np.array([[0,1],[2,0],[3,0],[1,2],[2,3]],dtype=np.int64),
         "pmesh_edge2cell": np.array([[0,0,2,2],[0,1,1,1],[1,1,0,0],[0,0,0,0],[1,1,2,2]],dtype=np.int64),
         }
        ]
